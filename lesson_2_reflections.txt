1. What happens when you initialize a repository? Why do you need to do it?

Initiallizing a repository is needed in order to create the .git folder which will hold the metadata of all the commits. Through this, the benefits of having version control will be achieved

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is where files you want to commit are placed. In this manner only those intended to be committed are prepped and bundled together in the said staging area. This give way for control over what to commit as well as when to commit said files.
 
3.How can you use the staging area to make sure you have one commit per logical change?

It will allow one to be selective of what to commit as well as check whether the proper modification has been done.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branching would be good for when a big change will be made, a new feature will be added or for when a setup is to be tested. The branch would allow for an intact copy of the original one while being able to track the commits for both the new and the other versions.

5. How do the diagrams help you visualize the branch structure?

This helps in seeing the reachability of all the commits as well astracking the position of the branches where changes could have been made.

6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

When we merge 2 branches together changes made independently are retained and the rest are counterchecked with the parent code. After merging, all the commits are now interleaved and thus will require checking against the parent.

7. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

PROS: Updates and changes can be compared among branches and the ancestor deliberately when automatic, while one is given the authority to choose which simillar changes to take effect over the other when it's manual.
CONS: Automatic merging may leave out or put back things that are unintended. While manual merging may become a tedious task especially when the conflict is very very small.
